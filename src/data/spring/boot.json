{
  "title": "Spring Boot",
  "topics": [
    {
      "id": "auto-configuration",
      "title": "Auto-Configuration",
      "description": "Spring Boot's automatic configuration mechanism",
      "concepts": [
        {
          "name": "Conditional Configuration",
          "annotations": [
            {
              "name": "@ConditionalOnClass",
              "description": "Configuration applies if class is present",
              "example": "@ConditionalOnClass(DataSource.class)"
            },
            {
              "name": "@ConditionalOnMissingBean",
              "description": "Configuration applies if bean is not present",
              "example": "@ConditionalOnMissingBean(DataSource.class)"
            },
            {
              "name": "@ConditionalOnProperty",
              "description": "Configuration based on property values",
              "example": "@ConditionalOnProperty(prefix=\"app\", name=\"feature\", havingValue=\"true\")"
            },
            {
              "name": "@ConditionalOnWebApplication",
              "description": "Configuration for web applications",
              "example": "@ConditionalOnWebApplication(type = Type.SERVLET)"
            }
          ]
        },
        {
          "name": "Auto-Configuration Files",
          "description": "Files that enable auto-configuration",
          "locations": [
            "META-INF/spring.factories",
            "META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports"
          ],
          "example": {
            "path": "META-INF/spring.factories",
            "content": "org.springframework.boot.autoconfigure.EnableAutoConfiguration=\\\ncom.example.MyAutoConfiguration"
          }
        }
      ]
    },
    {
      "id": "properties",
      "title": "Externalized Configuration",
      "description": "Managing application configuration",
      "types": [
        {
          "name": "application.properties/yaml",
          "locations": [
            "classpath:/",
            "classpath:/config/",
            "file:./",
            "file:./config/"
          ],
          "example": {
            "properties": "spring.datasource.url=jdbc:mysql://localhost/db\nspring.jpa.hibernate.ddl-auto=update",
            "yaml": "spring:\n  datasource:\n    url: jdbc:mysql://localhost/db\n  jpa:\n    hibernate:\n      ddl-auto: update"
          }
        },
        {
          "name": "@ConfigurationProperties",
          "description": "Type-safe configuration properties",
          "example": {
            "code": "@ConfigurationProperties(prefix = \"app\")\npublic class AppProperties {\n    private String name;\n    private int timeout;\n    // getters and setters\n}"
          }
        },
        {
          "name": "Profiles",
          "description": "Environment-specific configuration",
          "usage": [
            {
              "method": "application-{profile}.properties",
              "example": "application-dev.properties\napplication-prod.properties"
            },
            {
              "method": "@Profile annotation",
              "example": "@Profile(\"dev\")\n@Configuration\npublic class DevConfig {}"
            }
          ]
        }
      ]
    },
    {
      "id": "starters",
      "title": "Spring Boot Starters",
      "description": "Dependency descriptors for common application types",
      "commonStarters": [
        {
          "name": "spring-boot-starter-web",
          "description": "Web and RESTful applications",
          "includes": [
            "Spring MVC",
            "Tomcat",
            "Jackson"
          ]
        },
        {
          "name": "spring-boot-starter-data-jpa",
          "description": "JPA with Hibernate",
          "includes": [
            "Hibernate",
            "Spring Data JPA",
            "Spring Transaction"
          ]
        },
        {
          "name": "spring-boot-starter-security",
          "description": "Security features",
          "includes": [
            "Spring Security",
            "Security Config"
          ]
        },
        {
          "name": "spring-boot-starter-test",
          "description": "Testing framework",
          "includes": [
            "JUnit",
            "Mockito",
            "Spring Test"
          ]
        }
      ]
    },
    {
      "id": "actuator",
      "title": "Spring Boot Actuator",
      "description": "Production-ready features for monitoring and managing applications",
      "endpoints": [
        {
          "path": "/health",
          "description": "Application health information",
          "usage": "Monitor application health"
        },
        {
          "path": "/metrics",
          "description": "Application metrics",
          "usage": "Monitor application metrics"
        },
        {
          "path": "/info",
          "description": "Application information",
          "usage": "Custom application info"
        },
        {
          "path": "/env",
          "description": "Environment properties",
          "usage": "View configuration properties"
        }
      ],
      "configuration": {
        "exposure": {
          "example": "management.endpoints.web.exposure.include=*",
          "security": "Careful consideration needed for production"
        }
      }
    },
    {
      "id": "embedded-servers",
      "title": "Embedded Servers",
      "description": "Built-in server support",
      "servers": [
        {
          "name": "Tomcat",
          "default": true,
          "configuration": {
            "properties": [
              "server.port",
              "server.servlet.context-path"
            ]
          }
        },
        {
          "name": "Jetty",
          "configuration": {
            "dependency": "spring-boot-starter-jetty",
            "exclusions": ["spring-boot-starter-tomcat"]
          }
        },
        {
          "name": "Undertow",
          "configuration": {
            "dependency": "spring-boot-starter-undertow",
            "exclusions": ["spring-boot-starter-tomcat"]
          }
        }
      ]
    }
  ]
}