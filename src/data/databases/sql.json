{
  "title": "SQL Guide",
  "topics": [
    {
      "id": "basic-concepts",
      "title": "Basic Concepts",
      "concepts": [
        {
          "name": "Database",
          "description": "Organized collection of structured data",
          "types": [
            "Relational (SQL)",
            "Non-relational (NoSQL)"
          ]
        },
        {
          "name": "Table",
          "description": "Collection of related data entries consisting of rows and columns",
          "components": [
            "Columns (fields)",
            "Rows (records)",
            "Primary Key",
            "Foreign Key"
          ]
        },
        {
          "name": "Schema",
          "description": "Logical container for database objects",
          "elements": [
            "Tables",
            "Views",
            "Stored Procedures",
            "Functions"
          ]
        }
      ]
    },
    {
      "id": "data-types",
      "title": "Common Data Types",
      "categories": [
        {
          "name": "Numeric Types",
          "types": [
            {
              "name": "INT",
              "description": "Whole numbers"
            },
            {
              "name": "DECIMAL/NUMERIC",
              "description": "Exact decimal numbers"
            },
            {
              "name": "FLOAT/DOUBLE",
              "description": "Approximate decimal numbers"
            }
          ]
        },
        {
          "name": "String Types",
          "types": [
            {
              "name": "CHAR",
              "description": "Fixed-length string"
            },
            {
              "name": "VARCHAR",
              "description": "Variable-length string"
            },
            {
              "name": "TEXT",
              "description": "Long text string"
            }
          ]
        },
        {
          "name": "Date/Time Types",
          "types": [
            {
              "name": "DATE",
              "description": "Date only"
            },
            {
              "name": "TIME",
              "description": "Time only"
            },
            {
              "name": "TIMESTAMP",
              "description": "Date and time"
            }
          ]
        }
      ]
    },
    {
      "id": "basic-operations",
      "title": "Basic SQL Operations (CRUD)",
      "operations": [
        {
          "name": "SELECT",
          "description": "Retrieve data from database",
          "examples": [
            {
              "description": "Basic select",
              "code": "SELECT column1, column2 FROM table_name;"
            },
            {
              "description": "With conditions",
              "code": "SELECT * FROM table_name WHERE condition;"
            },
            {
              "description": "With ordering",
              "code": "SELECT * FROM table_name ORDER BY column_name;"
            }
          ]
        },
        {
          "name": "INSERT",
          "description": "Add new records",
          "examples": [
            {
              "description": "Single row insert",
              "code": "INSERT INTO table_name (column1, column2) VALUES (value1, value2);"
            },
            {
              "description": "Multiple row insert",
              "code": "INSERT INTO table_name (column1, column2) VALUES (value1, value2), (value3, value4);"
            }
          ]
        },
        {
          "name": "UPDATE",
          "description": "Modify existing records",
          "examples": [
            {
              "description": "Basic update",
              "code": "UPDATE table_name SET column1 = value1 WHERE condition;"
            }
          ]
        },
        {
          "name": "DELETE",
          "description": "Remove records",
          "examples": [
            {
              "description": "Delete with condition",
              "code": "DELETE FROM table_name WHERE condition;"
            }
          ]
        }
      ]
    },
    {
      "id": "joins",
      "title": "SQL Joins",
      "types": [
        {
          "name": "INNER JOIN",
          "description": "Returns only matching records from both tables",
          "example": "SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;"
        },
        {
          "name": "LEFT JOIN",
          "description": "Returns all records from left table and matching from right",
          "example": "SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id;"
        },
        {
          "name": "RIGHT JOIN",
          "description": "Returns all records from right table and matching from left",
          "example": "SELECT * FROM table1 RIGHT JOIN table2 ON table1.id = table2.id;"
        },
        {
          "name": "FULL OUTER JOIN",
          "description": "Returns all records from both tables",
          "example": "SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"
        }
      ]
    },
    {
      "id": "advanced-queries",
      "title": "Advanced SQL Features",
      "features": [
        {
          "name": "Aggregation Functions",
          "functions": [
            {
              "name": "COUNT",
              "example": "SELECT COUNT(*) FROM table_name;"
            },
            {
              "name": "SUM",
              "example": "SELECT SUM(column_name) FROM table_name;"
            },
            {
              "name": "AVG",
              "example": "SELECT AVG(column_name) FROM table_name;"
            },
            {
              "name": "MAX/MIN",
              "example": "SELECT MAX(column_name), MIN(column_name) FROM table_name;"
            }
          ]
        },
        {
          "name": "GROUP BY",
          "description": "Group rows that have same values",
          "example": "SELECT column1, COUNT(*) FROM table_name GROUP BY column1;"
        },
        {
          "name": "HAVING",
          "description": "Specify conditions for grouped rows",
          "example": "SELECT column1, COUNT(*) FROM table_name GROUP BY column1 HAVING COUNT(*) > 5;"
        },
        {
          "name": "Subqueries",
          "types": [
            {
              "name": "Single row subquery",
              "example": "SELECT * FROM table1 WHERE column1 > (SELECT AVG(column1) FROM table1);"
            },
            {
              "name": "Multiple row subquery",
              "example": "SELECT * FROM table1 WHERE column1 IN (SELECT column1 FROM table2);"
            }
          ]
        }
      ]
    },
    {
      "id": "optimization",
      "title": "SQL Optimization",
      "techniques": [
        {
          "name": "Indexing",
          "types": [
            {
              "name": "Primary Index",
              "usage": "Automatically created for primary key"
            },
            {
              "name": "Secondary Index",
              "usage": "Created for frequently queried columns"
            },
            {
              "name": "Composite Index",
              "usage": "Index on multiple columns"
            }
          ],
          "best_practices": [
            "Index columns used in WHERE clause",
            "Index foreign key columns",
            "Avoid over-indexing",
            "Monitor index usage"
          ]
        },
        {
          "name": "Query Optimization",
          "techniques": [
            "Use specific column names instead of SELECT *",
            "Use appropriate WHERE clauses",
            "Optimize JOIN operations",
            "Use EXPLAIN to analyze queries"
          ]
        }
      ]
    },
    {
      "id": "transactions",
      "title": "Transactions",
      "concepts": [
        {
          "name": "ACID Properties",
          "properties": [
            "Atomicity",
            "Consistency",
            "Isolation",
            "Durability"
          ]
        },
        {
          "name": "Transaction Control",
          "commands": [
            {
              "name": "BEGIN TRANSACTION",
              "description": "Start a new transaction"
            },
            {
              "name": "COMMIT",
              "description": "Save changes permanently"
            },
            {
              "name": "ROLLBACK",
              "description": "Undo changes"
            },
            {
              "name": "SAVEPOINT",
              "description": "Create points for partial rollbacks"
            }
          ]
        }
      ]
    },
    {
      "id": "best-practices",
      "title": "SQL Best Practices",
      "categories": [
        {
          "name": "Database Design",
          "practices": [
            "Use appropriate data types",
            "Normalize database structure",
            "Use meaningful naming conventions",
            "Create proper relationships"
          ]
        },
        {
          "name": "Query Writing",
          "practices": [
            "Write readable and maintainable queries",
            "Use appropriate indexes",
            "Avoid SELECT *",
            "Use prepared statements"
          ]
        },
        {
          "name": "Performance",
          "practices": [
            "Optimize queries for performance",
            "Use appropriate indexing",
            "Monitor query execution plans",
            "Regular maintenance and optimization"
          ]
        }
      ]
    }
  ]
}